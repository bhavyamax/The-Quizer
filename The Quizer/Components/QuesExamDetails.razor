@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.JSInterop
@using Radzen
@using Radzen.Blazor
@using The_Quizer.Models
@using The_Quizer.ViewModels

@inject The_Quizer.Data.AppDBContext context


<h3>QuesExamDetails</h3>
@if (ExamQuestions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenButton Text="wdjkgkjbvesjkfbvrh"></RadzenButton>
    <div class="row">
        <div class="col-md-6">
            <RadzenDataGrid ColumnWidth="200px" AllowFiltering="true" AllowPaging="true" PageSize="3" AllowSorting="true" Data="@ExamQuestions" TItem="ExamQuestion" @bind-Value="@SelectedExamQuestions">
                <Columns>
                    <RadzenDataGridColumn Width="200px" TItem="ExamQuestion" Property="Question" Title="Question" />
                    <RadzenDataGridColumn Width="150px" TItem="ExamQuestion" Property="Type" Title="Type" />
                    <RadzenDataGridColumn Width="90px" TItem="ExamQuestion" Property="points" Title="Points" />
                    <RadzenDataGridColumn TItem="ExamQuestion" Property="ID" Title="ID" />
                </Columns>
            </RadzenDataGrid>
        </div>
        <div class="col-md-6">
            <RadzenCard Style="margin-bottom:20px">
                Answers:<b>@SelectedExamQuestions.FirstOrDefault()?.ID</b>
            </RadzenCard>
            <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@(SelectedExamQuestions.FirstOrDefault()?.QuestionAnswers)" TItem="QuestionAnswer">
                <Columns>
                    <RadzenDataGridColumn TItem="QuestionAnswer" Property="Answer" Title="Order" />
                    <RadzenDataGridColumn TItem="QuestionAnswer" Property="isCorrect" Title="Product" />
                    <RadzenDataGridColumn TItem="QuestionAnswer" Property="ID" Title="Quantity" />
                </Columns>
            </RadzenDataGrid>
        </div>
    </div>
}

@code {
    IList<ExamQuestion> SelectedExamQuestions { get; set; }
    [Parameter]
    public IQueryable<ExamQuestion> ExamQuestions { get; set; }

    protected override void OnInitialized()
    {
        ExamQuestions = context.ExamQuestions.Include(a => a.QuestionAnswers);
        SelectedExamQuestions = new List<ExamQuestion>() { ExamQuestions.FirstOrDefault() };
    }
}
